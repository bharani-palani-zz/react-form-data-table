{"version":3,"sources":["root/FormElements/HtmlIcon.js","root/ReactFormDataTable.js","root/FormElements/Radio.js","root/FormElements/Checkbox.js","root/FormElements/FilterSelect.js","root/FormElements/DateTimeDropDown.js","root/FormElements/DateTimeSelector.js","root/FormElement.js","root/Pagination.js","root/FormElements/GroupElement.js","helpers/index.js","history.js","mockData.js","documentation/tables/SimpleDataTable.js","documentation/menuComponent.js","documentation/tables/LongTable.js","documentation/tables/AliasHeaders.js","documentation/tables/NoPagination.js","documentation/SideBar.js","documentation/Wrapper.js","documentation/index.js","App.js","reportWebVitals.js","index.js"],"names":["HtmlIcon","props","className","entity","rest","dangerouslySetInnerHTML","__html","defaultProps","property","ReactFormDataTable","Table","config","apiInstance","onAjaxCallBack","showTotal","rowKeyUp","insertCloneData","showTooltipFor","defaultValues","onTableUpdate","onReFetchData","cellWidth","theme","useState","rowElements","setRowElements","data","dbData","setDbData","TableRows","length","Object","keys","TableAliasRows","dbDataBackup","deleteData","setDeleteData","loader","setLoader","btnLoader","setBtnLoader","updatedIds","setUpdatedIds","sortType","setSortType","tableConfigErrors","setTableConfigErrors","pagination","footer","cTotal","total","ajaxButtonName","recordsPerPage","setRecordsPerPage","defaultRecordsPerPage","Math","ceil","currentPage","setCurrentPage","maxPagesToShow","createElementPromise","rows","map","v","row","Promise","resolve","reject","runAllApis","callBack","a","all","then","array","useEffect","push","error","o","every","ajaxType","includes","newDbData","setTimeout","updateDbData","index","primaryKey","i","j","id","filter","db","ind","Set","split","declare","operands","eval","onAddRow","bool","obj","t","dIndex","findIndex","d","backup","submitData","insertData","updateData","Number","postData","formdata","FormData","append","payloadKeyName","JSON","stringify","Axios","create","ajaxApiUrl","response","catch","status","finally","getColumnTotal","key","forEach","show","String","reduce","b","helpers","countryCurrencyLacSeperator","locale","currency","maxDecimal","whichKey","totArrays","f","forValue","number","forKey","concat","showDifference","indexes","checkSettlement","toFixed","showStability","checkSettlementString","doubleEntryBalanceStrings","zero","plus","minus","onSort","findType","toString","indexOf","Date","replace","isNaN","filteredDbData","sort","pop","onSortByDate","onSortByNumber","onSortByString","prevState","asc","onSetCurrentPage","page","showHideRows","onDelete","validId","undefined","filtered","di","onSearch","text","conditions","item","toLowerCase","some","c","onRecordsChange","count","getPageCounts","start","end","plurals","title","onSearchChange","onDropDownChange","onDismissSearch","style","gridTemplateColumns","heading","onClick","r","onChange","placeholder","value","element","showIncrement","showDecrement","isPostable","Boolean","slice","isTotalColumn","s","gridColumn","totalPages","onSetPage","selectedPageString","disabled","table","baseURL","headers","Radio","radio","radioList","preCheck","checked","radioSelected","setRadioSelected","k","type","e","target","name","htmlFor","label","Checkbox","info","FilterSelect","searchable","defaultValueOrArray","ref","useRef","toggle","setToggle","selectedValueOrArray","backupList","multiChoice","dropDownList","massagedList","list","setDropDownList","selected","setSelected","searchValue","setSearchValue","checkedItems","setCheckedItems","handleClickOutside","event","current","contains","getMoreString","document","addEventListener","removeEventListener","newVal","newList","sList","firstValue","newDropDownList","onCheckBoxChange","DateTimeDropDown","defaultValue","onSelectClick","onItemClick","focus","setFocus","listRef","onSetFocus","targetElm","querySelector","checkedPos","offsetTop","scrollTo","top","behavior","DateTimeSelector","getFullYear","dbYear","setDbYear","leadingZeros","getMonth","dbMonth","setDbMonth","getDate","dbDate","setDbDate","getHours","dbHours","setDbHours","getMinutes","dbMinutes","setDbMinutes","getSeconds","dbSeconds","setDbSeconds","dateCount","addLeadingZerosAsObject","inc","init","Array","fill","_","startYear","endYear","years","months","dateArray","dates","setDates","hours","minutes","seconds","date","callDays","FormElement","setDate","objectToDate","MM","DD","dateTime","setDatetime","parse","today","dt","hh","mm","ss","objectToDateTime","onBlur","val","pKey","isArray","renderElement","Pagination","makePageArray","from","idx","pages","setPages","totPages","newPages","createfromToArray","pageIdGen","GroupElemet","borderBottomRightRadius","self","fluorescentColor","sageHeaderAndList","sortKey","LoadRandomSpinnerIcon","stringToCapitalize","string","substring","toUpperCase","join","donutChartColors","indianLacSeperator","toLocaleString","maximumFractionDigits","minimumFractionDigits","lacSeperator","strToNumMonth","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","monthToStr","fullmonthNames","threeDigitMonthNames","num","dateToMonthYear","myDate","addMonths","m","setMonth","getNextMonthFirst","now","year","month","yyyy","getNow","mmm","dd","createBrowserHistory","simpleTable","dob","gender","salary","aliasHeaders","phone","city","pinCode","state","country","noPagination","SimpleDataTable","menus","href","component","SideBar","splitLocation","useLocation","pathname","align","menu","to","Wrapper","exact","path","React","Component","withRouter","Documentation","history","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86ca69de.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst HtmlIcon = props => {\n  const { className, entity, ...rest } = props;\n  return (\n    <span\n      className={`htmlIcon ${className}`}\n      dangerouslySetInnerHTML={{ __html: entity }}\n      {...rest}\n    />\n  );\n};\n\n// cross - &#10006;\n// minus - &#10134;\n// plus - &#10010;\n\nHtmlIcon.propTypes = {\n  className: PropTypes.string,\n  entity: PropTypes.string\n};\nHtmlIcon.defaultProps = {\n  property: \"String name\"\n};\n\nexport default HtmlIcon;\n","import React, { useState, useEffect } from \"react\";\nimport FormElement from \"./FormElement\";\nimport helpers from \"../helpers\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"./Pagination\";\nimport HtmlIcon from \"./FormElements/HtmlIcon\";\nimport GroupElemet from \"./FormElements/GroupElement\";\nimport Axios from \"axios\";\nimport \"./scss/ReactFormDataTable.scss\";\n\nfunction ReactFormDataTable(props) {\n  const Table = props.Table;\n  const config = props.config;\n  const className = props.className || \"\";\n  const apiInstance = props.apiInstance;\n  const onAjaxCallBack = props.onAjaxCallBack;\n  const showTotal = props.showTotal;\n  const rowKeyUp = props.rowKeyUp;\n  const insertCloneData = props.insertCloneData;\n  const showTooltipFor = props.showTooltipFor;\n  const defaultValues = props.defaultValues;\n  const onTableUpdate = props.onTableUpdate;\n  const onReFetchData = props.onReFetchData;\n  const cellWidth = props.cellWidth;\n  const theme = props.theme;\n  const [rowElements, setRowElements] = useState([]);\n  const [dbData, setDbData] = useState((props.data && props.data) || []);\n  const TableRows = props.data && props.data.length > 0 ? Object.keys(dbData[0]) : props.TableRows;\n  const TableAliasRows =  props.TableAliasRows.length > 0 ? props.TableAliasRows : Object.keys(dbData[0]);\n  const dbDataBackup = (props.data && [...props.data]) || [];\n  const [deleteData, setDeleteData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [btnLoader, setBtnLoader] = useState(false);\n  const [updatedIds, setUpdatedIds] = useState([]);\n  const [sortType, setSortType] = useState({});\n  const [tableConfigErrors, setTableConfigErrors] = useState([]);\n  const pagination =\n    config &&\n    config.footer &&\n    config.footer.pagination &&\n    Object.keys(config.footer.pagination).length > 0 &&\n    config.footer.pagination;\n  const cTotal = config && config.footer && config.footer.total;\n  const ajaxButtonName = props.ajaxButtonName;\n\n  const [recordsPerPage, setRecordsPerPage] = useState(\n    pagination && pagination.recordsPerPage\n  );\n  const defaultRecordsPerPage = pagination && pagination.recordsPerPage;\n  const [currentPage, setCurrentPage] = useState(\n    Math.ceil(dbData.length / recordsPerPage)\n  );\n  const maxPagesToShow = pagination && pagination.maxPagesToShow;\n\n  const createElementPromise = () => {\n    let rows =\n      props.rowElements.length > 0\n        ? props.rowElements\n        : Object.keys(dbData[0]).map(v => \"label\");\n    rows = rows.map(row => {\n      return new Promise((resolve, reject) => {\n        resolve(row);\n      });\n    });\n    return rows;\n  };\n\n  const runAllApis = callBack => {\n    setLoader(true);\n    const a = createElementPromise();\n    Promise.all([a]).then(async array => {\n      await Promise.all(array[0]).then(a => {\n        setRowElements(a);\n        setLoader(false);\n      });\n      typeof callBack === \"function\" && callBack();\n    });\n  };\n\n  useEffect(() => {\n    let array = [];\n    if (!dbData.length) {\n      array.push({\n        error: `The \"data\" props is required.`\n      });\n    }\n    if (dbData.length) {\n      if (dbData.map(o => Object.keys(o).length).every(v => v === dbData[0])) {\n        array.push({\n          error: `The \"data\" props, object counts are not same. Please check`\n        });\n      }\n    }\n    if (\n      apiInstance.ajaxType &&\n      ![\n        \"put\",\n        \"post\",\n        \"delete\",\n        \"patch\",\n        \"request\",\n        \"get\",\n        \"head\",\n        \"options\"\n      ].includes(apiInstance.ajaxType)\n    ) {\n      array.push({\n        error: `Allowed XHR request types are put, post, delete, patch, request, get, head, options. Please use any one in apiInstance.ajaxType props. For further info, visit https://www.npmjs.com/package/axios`\n      });\n    }\n\n    array.length > 0 && setTableConfigErrors(array);\n    // componentwillunmount\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    runAllApis();\n  }, [Table, props.rowElements]);\n\n  useEffect(() => {\n    if (props.data && props.data.length > 0) {\n      setDbData(props.data);\n    }\n  }, [props.data]);\n\n  useEffect(() => {\n    if (insertCloneData && insertCloneData.length > 0) {\n      setLoader(true);\n      const newDbData = [...insertCloneData, ...dbData];\n      setDbData(newDbData);\n      setTimeout(() => {\n        setLoader(false);\n      }, 500);\n    }\n  }, [insertCloneData]);\n\n  const updateDbData = (index, data, primaryKey) => {\n    // update DB data\n    const { i, j } = index;\n    dbData[i][j] = data;\n    setDbData(dbData);\n    // update changed rows\n    let id = dbData.filter((db, ind) => ind === i && db)[0][primaryKey] || \"\";\n    let array = id ? [...updatedIds, id] : [...updatedIds];\n    array = [...new Set(array)];\n    setUpdatedIds(array);\n    // update row if value changed\n    if (rowKeyUp) {\n      let [declare, operands] = rowKeyUp.split(\"=\");\n      if (declare && operands) {\n        const newDbData = dbData.map(row => {\n          row[declare] = eval(operands);\n          return row;\n        });\n        setDbData(newDbData);\n        onTableUpdate && onTableUpdate(newDbData);\n      }\n    }\n    onTableUpdate && onTableUpdate(dbData);\n  };\n\n  const onAddRow = bool => {\n    if (bool) {\n      const obj = {};\n      TableRows.map((t, i) => {\n        let dIndex = defaultValues.findIndex(d => Object.keys(d)[0] === t);\n        obj[t] = dIndex > -1 ? defaultValues[dIndex][t] : \"\";\n        return null;\n      });\n      let backup = [...dbData];\n      backup.push(obj);\n      setDbData(backup);\n    }\n  };\n\n  const submitData = () => {\n    setBtnLoader(true);\n    const insertData = dbData.filter(d => d[TableRows[0]] === \"\");\n    const updateData = dbData\n      .filter(d => updatedIds.includes(d[TableRows[0]]))\n      .filter(d => Number(d[TableRows[0]]) > 0 && d);\n    let postData = {\n      ...((insertData.length > 0 ||\n        deleteData.length > 0 ||\n        updateData.length > 0) && { Table }),\n      ...(insertData.length > 0 && { insertData }),\n      ...(deleteData.length > 0 && { deleteData }),\n      ...(updateData.length > 0 && { updateData })\n    };\n    const formdata = new FormData();\n    formdata.append(apiInstance.payloadKeyName, JSON.stringify(postData));\n\n    Axios.create(apiInstance.create)[apiInstance.ajaxType](apiInstance.ajaxApiUrl, formdata)\n      .then(response => {\n        onAjaxCallBack && onAjaxCallBack(response);\n        if (insertData.length > 0) {\n          setLoader(true);\n          setTimeout(() => {\n            onReFetchData(true);\n            setLoader(false);\n          }, 1000);\n        }\n      })\n      .catch(error => {\n        onAjaxCallBack && onAjaxCallBack({ error, status: false });\n      })\n      .finally(() => {\n        setDeleteData([]);\n        setUpdatedIds([]);\n        setBtnLoader(false);\n        // console.log(\"bbb\", { deleteData, updatedIds, insertData });\n      });\n  };\n\n  const getColumnTotal = key => {\n    let total = \"\";\n    if (showTotal.length > 0) {\n      showTotal.forEach((show, i) => {\n        if (typeof show === \"string\" && String(show) === String(key)) {\n          total = dbData.reduce((a, b) => Number(a) + Number(b[key]), 0);\n          total =\n            cTotal &&\n            helpers.countryCurrencyLacSeperator(\n              cTotal.locale,\n              cTotal.currency,\n              total,\n              cTotal.maxDecimal\n            );\n        } else if (typeof show === \"object\" && show.whichKey === String(key)) {\n          let totArrays = [];\n          total = [show]\n            .map(f => {\n              return f.forValue.map((v, i) => {\n                const number = dbData\n                  .filter(db => db[f.forKey] === v)\n                  .reduce((a, b) => Number(a) + Number(b[key]), 0);\n                totArrays.push(number);\n                return (\n                  <div key={i}>\n                    {cTotal &&\n                      helpers.countryCurrencyLacSeperator(\n                        cTotal.locale,\n                        cTotal.currency,\n                        number,\n                        cTotal.maxDecimal\n                      )}\n                    {` (${v})`}\n                  </div>\n                );\n              });\n            })\n            .concat(\n              show.showDifference && show.showDifference.indexes.length === 2 && (\n                <div\n                  key={`totRow-${i}`}\n                  className={checkSettlement(\n                    Number(totArrays[show.showDifference.indexes[0]]).toFixed(\n                      2\n                    ) -\n                      Number(totArrays[show.showDifference.indexes[1]]).toFixed(\n                        2\n                      )\n                  )}\n                >\n                  {cTotal &&\n                    helpers.countryCurrencyLacSeperator(\n                      cTotal.locale,\n                      cTotal.currency,\n                      Number(totArrays[show.showDifference.indexes[0]]).toFixed(\n                        2\n                      ) -\n                        Number(\n                          totArrays[show.showDifference.indexes[1]]\n                        ).toFixed(2),\n                      cTotal.maxDecimal\n                    )}\n                  &nbsp;\n                  {show.showDifference.showStability &&\n                    checkSettlementString(\n                      Number(totArrays[show.showDifference.indexes[0]]).toFixed(\n                        2\n                      ) -\n                        Number(\n                          totArrays[show.showDifference.indexes[1]]\n                        ).toFixed(2)\n                    )}\n                </div>\n              )\n            );\n        }\n      });\n    }\n    return total;\n  };\n  const checkSettlement = number => {\n    // return number === 0 ? \"txtSuccess\" : \"txtError\";\n    if (number === 0) {\n      return \"txtSuccess\";\n    }\n    if (number > 0) {\n      return \"txtError\";\n    }\n    if (number < 0) {\n      return \"txtWarning\";\n    }\n  };\n  const checkSettlementString = number => {\n    if (number === 0) {\n      return (\n        <span>\n          (\n          {cTotal &&\n            cTotal.doubleEntryBalanceStrings &&\n            cTotal.doubleEntryBalanceStrings.zero}\n          )\n        </span>\n      );\n    } else if (number < 0) {\n      return (\n        <span>\n          (\n          {cTotal &&\n            cTotal.doubleEntryBalanceStrings &&\n            cTotal.doubleEntryBalanceStrings.plus}\n          )\n        </span>\n      );\n    } else if (number > 0) {\n      return (\n        <span>\n          (\n          {cTotal &&\n            cTotal.doubleEntryBalanceStrings &&\n            cTotal.doubleEntryBalanceStrings.minus}\n          )\n        </span>\n      );\n    }\n  };\n  const onSort = key => {\n    let findType = dbData.map(db => {\n      if (\n        db[key] &&\n        (db[key].toString().indexOf(\"-\") > -1 ||\n          db[key].toString().indexOf(\"/\") > -1) &&\n        new Date(String(db[key]).replace(/-/g, \"/\")) !== \"Invalid Date\"\n      ) {\n        return \"date\";\n      }\n      if (db[key] !== \"\" && !isNaN(db[key])) {\n        return \"number\";\n      }\n      return \"string\";\n    });\n\n    findType = findType\n      .sort(\n        (a, b) =>\n          findType.filter(v => v === a).length -\n          findType.filter(v => v === b).length\n      )\n      .pop();\n\n    let filteredDbData = [];\n    if (findType === \"date\") {\n      filteredDbData = onSortByDate(key);\n    }\n    if (findType === \"number\") {\n      filteredDbData = onSortByNumber(key);\n    }\n    if (findType === \"string\") {\n      filteredDbData = onSortByString(key);\n    }\n    setDbData([...filteredDbData]);\n\n    setSortType(prevState => ({\n      asc: !prevState.asc,\n      key\n    }));\n  };\n\n  const onSortByNumber = key => {\n    return dbData.sort((a, b) => {\n      return sortType.asc ? b[key] - a[key] : a[key] - b[key];\n    });\n  };\n\n  const onSortByDate = key => {\n    return dbData.sort((a, b) => {\n      return sortType.asc\n        ? new Date(b[key]) - new Date(a[key])\n        : new Date(a[key]) - new Date(b[key]);\n    });\n  };\n\n  const onSortByString = key => {\n    return dbData.sort((a, b) => {\n      return sortType.asc\n        ? (b[key] > a[key]) - (b[key] < a[key])\n        : (a[key] > b[key]) - (a[key] < b[key]);\n    });\n  };\n  const onSetCurrentPage = page => {\n    setCurrentPage(page);\n  };\n\n  const showHideRows = i => {\n    const first = (currentPage - 1) * recordsPerPage;\n    const second = currentPage * recordsPerPage - 1;\n    return i >= first && i <= second ? \"show\" : \"hide\";\n  };\n\n  const onDelete = index => {\n    const { i } = index;\n\n    const validId = dbData[i] && dbData[i][TableRows[0]];\n    if (validId && validId !== undefined) {\n      deleteData.push(validId);\n      setDeleteData(deleteData);\n    }\n\n    const filtered = dbData.filter((d, di) => di !== i);\n    setDbData(filtered);\n    onTableUpdate && onTableUpdate(filtered);\n  };\n\n  const onSearch = text => {\n    const conditions = [];\n    TableRows.map(t =>\n      conditions.push(item =>\n        item[t]\n          .toString()\n          .toLowerCase()\n          .includes(text.toString().toLowerCase())\n      )\n    );\n    const filtered = dbDataBackup.filter(f => {\n      return (\n        conditions.some(c => c(f)) && !deleteData.includes(f[TableRows[0]])\n      );\n    });\n    setDbData([...filtered]);\n  };\n\n  const onRecordsChange = count => {\n    setRecordsPerPage(count);\n  };\n\n  const getPageCounts = () => {\n    let start = (currentPage - 1) * recordsPerPage + 1;\n    start = start > 0 ? start : 0;\n    const end =\n      dbData.length >= currentPage * recordsPerPage\n        ? currentPage * recordsPerPage\n        : dbData.length;\n    const plurals = dbData.length > 1 ? \"s\" : \"\";\n    return `${start} to ${end} of ${\n      dbData ? dbData.length : 0\n    } record${plurals}`;\n  };\n\n  return loader === false ? (\n    <div className={`react-form-data-table ${theme} ${className}`}>\n      {tableConfigErrors.length === 0 ? (\n        <>\n          {pagination && (\n            <div className=\"biGrid\">\n              <div>\n                <div className=\"heading\" title={getPageCounts()}>\n                  {getPageCounts()}\n                </div>\n              </div>\n              <div>\n                <GroupElemet\n                  defaultRecordsPerPage={defaultRecordsPerPage}\n                  onSearchChange={v => onSearch(v)}\n                  onDropDownChange={count => onRecordsChange(count)}\n                  onDismissSearch={() => onSearch(\"\")}\n                />\n              </div>\n            </div>\n          )}\n          <div className=\"grid-responsive\">\n            <div\n              style={{\n                ...(apiInstance.ajaxApiUrl && {\n                  gridTemplateColumns: `50px repeat(${TableRows.length -\n                    1}, ${cellWidth})`\n                }),\n                ...(!apiInstance.ajaxApiUrl && {\n                  gridTemplateColumns: `repeat(${TableRows.length}, ${cellWidth})`\n                })\n              }}\n              className={`grid-container responsive-grid`}\n            >\n              {TableAliasRows.map((heading, i) => (\n                <div\n                  key={`key-${i}`}\n                  onClick={() => onSort(TableRows[i])}\n                  className=\"header\"\n                >\n                  {i > 0 || !apiInstance.ajaxApiUrl ? (\n                    <>\n                      <span title={heading}>{heading}</span>{\" \"}\n                      {TableRows[i] === sortType.key && (\n                        <HtmlIcon\n                          className=\"default\"\n                          entity={sortType.asc ? \"&#8593;\" : \"&#8595;\"}\n                        />\n                      )}\n                    </>\n                  ) : (\n                    <HtmlIcon className=\"default\" entity={\"&#9776;\"} />\n                  )}\n                </div>\n              ))}\n              {dbData.length > 0 ? (\n                <>\n                  {dbData.map((d, i) =>\n                    TableRows.map((r, j) => (\n                      <div\n                        key={`${d[r]}-${j}`}\n                        className={`${pagination ? showHideRows(i) : \"\"}`}\n                      >\n                        {\n                          <div\n                            {...(showTooltipFor.includes(r) && {\n                              className: \"tooltipContainer\"\n                            })}\n                          >\n                            {d[r] !== \"\" && showTooltipFor.includes(r) && (\n                              <span className=\"tooltips\">{d[r]}</span>\n                            )}\n                            <FormElement\n                              key={`${i}-${j}`}\n                              onDelete={index => onDelete(index)}\n                              onChange={(index, data, primaryKey, t = 1) => {\n                                updateDbData(index, data, primaryKey);\n                              }}\n                              index={{ i, j: r }}\n                              placeholder={TableAliasRows[j]}\n                              value={d[r]}\n                              element={rowElements[j]}\n                              showIncrement={dbData.length - 1 === i}\n                              showDecrement={true}\n                              onAddRow={bool => onAddRow(bool)}\n                              primaryKey={TableRows[0]}\n                              isPostable={Boolean(apiInstance.ajaxApiUrl)}\n                            />\n                          </div>\n                        }\n                      </div>\n                    ))\n                  )}\n                  {showTotal && showTotal.length > 0 && (\n                    <>\n                      <div className=\"textCenter\">Total</div>\n                      {TableRows.slice(1).map((r, i) => {\n                        const isTotalColumn =\n                          showTotal.includes(r) ||\n                          showTotal.some(s => s.whichKey === r);\n                        return (\n                          <div\n                            className={isTotalColumn ? \"totalColumn\" : \"\"}\n                            key={i}\n                          >\n                            {isTotalColumn ? getColumnTotal(r) : \"\"}\n                          </div>\n                        );\n                      })}\n                    </>\n                  )}\n                </>\n              ) : (\n                <>\n                  <FormElement\n                    key={-1}\n                    index={{ i: 0, j: 0 }}\n                    element={rowElements[0]}\n                    showIncrement={true}\n                    showDecrement={false}\n                    onAddRow={bool => onAddRow(bool)}\n                  />\n                  <div\n                    className=\"noRecords\"\n                    style={{ gridColumn: `1 / span ${TableRows.length}` }}\n                  >\n                    No Records\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n          <div className=\"footer\">\n            {pagination && (\n              <Pagination\n                currentPage={currentPage}\n                totalPages={Math.ceil(dbData.length / recordsPerPage)}\n                onSetPage={onSetCurrentPage}\n                maxPagesToShow={maxPagesToShow}\n                selectedPageString={pagination.currentPage}\n              />\n            )}\n            {apiInstance.ajaxApiUrl && (\n              <div className=\"txtRight\">\n                <button\n                  onClick={() => submitData()}\n                  disabled={btnLoader}\n                  className=\"submitBtn\"\n                >\n                  <div className=\"gridBtn\">\n                    <span>{ajaxButtonName}&nbsp;</span>\n                    {btnLoader && (\n                      <HtmlIcon className=\"rotate\" entity={\"&#9864;\"} />\n                    )}\n                  </div>\n                </button>\n              </div>\n            )}\n          </div>\n        </>\n      ) : (\n        <div className=\"errorWrapper\">\n          <h3>Please resolve the following issues:</h3>\n          <ol>\n            {tableConfigErrors.map((table, i) => (\n              <li key={i}>{table.error}</li>\n            ))}\n          </ol>\n        </div>\n      )}\n    </div>\n  ) : (\n    <div>Loading</div>\n  );\n}\n\nReactFormDataTable.propTypes = {\n  Table: PropTypes.string,\n  TableRows: PropTypes.array.isRequired,\n  TableAliasRows: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  showTotal: PropTypes.array,\n  rowKeyUp: PropTypes.string,\n  rowElements: PropTypes.array.isRequired,\n  insertCloneData: PropTypes.array,\n  showTooltipFor: PropTypes.array,\n  onTableUpdate: PropTypes.func,\n  config: PropTypes.object,\n  className: PropTypes.string,\n  defaultValues: PropTypes.array,\n  apiInstance: PropTypes.object,\n  onAjaxCallBack: PropTypes.func,\n  ajaxButtonName: PropTypes.string\n};\nReactFormDataTable.defaultProps = {\n  Table: \"My table\",\n  TableRows: [],\n  TableAliasRows: [],\n  showTotal: [],\n  rowKeyUp: \"\",\n  rowElements: [],\n  insertCloneData: [],\n  showTooltipFor: [],\n  ajaxButtonName: \"Submit\",\n  config: {\n    footer: {\n      total: {\n        locale: \"en-IN\",\n        currency: \"\",\n        maxDecimal: 2,\n        doubleEntryBalanceStrings: {\n          zero: \"Settled\",\n          plus: \"Ahead\",\n          minus: \"Bal\"\n        }\n      },\n      pagination: {\n        currentPage: \"first\",\n        recordsPerPage: 10,\n        maxPagesToShow: 5\n      }\n    }\n  },\n  defaultValues: [],\n  cellWidth: \"12rem\",\n  theme: \"\",\n  apiInstance: {\n    create: {\n      baseURL: \"\",\n      headers: {},\n    },\n    ajaxApiUrl: \"\",\n    payloadKeyName: \"payload\",\n    ajaxType: \"post\",\n  }\n};\n\nexport default ReactFormDataTable;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = props => {\n  const { index, primaryKey, onChange, element } = props;\n  const { i, j } = index;\n  const [radioList] = useState(element.radio.radioList);\n  const preCheck = props.value || radioList.filter(r => r.checked)[0].value;\n  const [radioSelected, setRadioSelected] = useState(preCheck);\n\n  // useEffect(() => {\n  //   onChange(index, radioSelected, primaryKey);\n  // }, [radioSelected]);\n\n  return (\n    <div className={`radioComponent`}>\n      {radioList.length &&\n        radioList.map((radio, k) => (\n          <div className=\"wrapper\" key={k}>\n            <input\n              type=\"radio\"\n              onChange={e => {\n                setRadioSelected(e.target.value);\n                onChange(index, radio.value, primaryKey);\n              }}\n              value={radio.value}\n              checked={radio.value === radioSelected}\n              name={`${j}-${i}`}\n              id={`${j}-${k}-${i}`}\n            />{\" \"}\n            <span className=\"checkmark\"></span>\n            <label htmlFor={`${j}-${k}-${i}`}>{radio.label}</label>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nRadio.propTypes = {\n  index: PropTypes.object, \n  primaryKey: PropTypes.string, \n  onChange: PropTypes.func, \n  element: PropTypes.object\n};\nRadio.defaultProps = {\n  property: \"String name\"\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = props => {\n  const { info, checked, ...rest } = props;\n\n  return (\n    <label className=\"checkBoxComponent\">\n      <span>{info.value}</span>\n      <input checked={checked} type=\"checkbox\" {...rest} />\n      <span className=\"checkmark\"></span>\n    </label>\n  );\n};\n\nCheckbox.propTypes = {\n  info: PropTypes.object,\n  checked: PropTypes.bool\n};\nCheckbox.defaultProps = {\n  checked: false\n};\n\nexport default Checkbox;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HtmlIcon from \"./HtmlIcon\";\nimport Checkbox from \"./Checkbox\";\n\nconst FilterSelect = props => {\n  const {\n    index,\n    type,\n    primaryKey,\n    searchable,\n    element,\n    value: defaultValueOrArray,\n    onChange\n  } = props;\n  const ref = useRef(null);\n  const [toggle, setToggle] = useState(false);\n\n  const selectNull = () => {\n    // return backupList.filter(v => v.id === null)[0].value;\n    return \"Select\";\n  };\n\n  // let selectedValueOrArray = [58]; // use this for documentation [84, 58, 81]\n  let selectedValueOrArray = defaultValueOrArray; // need this\n  const backupList = element.multiChoice.dropDownList;\n  if (type === \"single\") {\n    selectedValueOrArray =\n      backupList.length > 0 &&\n      backupList.filter(b => b.id === defaultValueOrArray);\n    selectedValueOrArray =\n      selectedValueOrArray.length > 0\n        ? selectedValueOrArray[0].value\n        : selectNull();\n  } else {\n    selectedValueOrArray =\n      typeof selectedValueOrArray === \"object\" &&\n      selectedValueOrArray.length > 0\n        ? selectedValueOrArray.map(v => v.toString())\n        : [];\n  }\n\n  const massagedList = backupList.map(d => {\n    d.checked = d.id && selectedValueOrArray.includes(d.id.toString());\n    return d;\n  });\n  const list = type === \"single\" ? backupList : massagedList;\n  const [dropDownList, setDropDownList] = useState(list);\n  const [selected, setSelected] = useState(selectedValueOrArray);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [checkedItems, setCheckedItems] = useState(selectedValueOrArray);\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setToggle(false);\n    }\n  };\n\n  useEffect(() => {\n    if (type === \"multiple\") {\n      setSelected(getMoreString(selectedValueOrArray));\n    }\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  const onSetSelected = info => {\n    onChange(index, info.id, primaryKey); // need to pass id for dropDown\n    setSelected(info.value);\n    type === \"single\" && setToggle(false);\n  };\n\n  const onSearch = async newVal => {\n    setSearchValue(newVal);\n    const newList = backupList\n      .filter(b =>\n        b.value\n          .toString()\n          .toLowerCase()\n          .includes(newVal.toString().toLowerCase())\n      )\n      .map(b =>\n        checkedItems.includes(b.id)\n          ? { ...b, checked: true }\n          : { ...b, checked: false }\n      );\n    await setDropDownList(newList);\n  };\n\n  const onDismiss = e => {\n    setSearchValue(\"\");\n    onSearch(\"\");\n  };\n\n  const getMoreString = sList => {\n    let firstValue =\n      sList.length > 0 && backupList.filter(b => b.id === sList[0]);\n    if (firstValue.length === 1) {\n      firstValue = firstValue[0].value;\n      const selString =\n        sList.length > 1\n          ? `${firstValue} + ${sList.length - 1} more...`\n          : firstValue;\n      return selString;\n    } else {\n      return selectNull();\n    }\n  };\n  const onCheckBoxChange = (e, info) => {\n    const {\n      target: { checked }\n    } = e;\n    let sList =\n      info.id && checked\n        ? [...checkedItems, info.id]\n        : checkedItems.filter(c => c !== info.id);\n    sList = [...new Set(sList)];\n    // new way of updating array object values on condition\n    const newDropDownList = dropDownList.map(b =>\n      sList.includes(b.id) ? { ...b, checked: true } : { ...b, checked: false }\n    );\n    setDropDownList(newDropDownList);\n    setCheckedItems(sList);\n    setSelected(getMoreString(sList));\n    // onChange(index, sList, primaryKey);\n  };\n\n  return (\n    <div ref={ref} className={`filterSelectComponent`}>\n      <div\n        onClick={() => setToggle(!toggle)}\n        className={`selected ${toggle ? \"yes\" : \"no\"}`}\n      >\n        <div className=\"string\" title={selected}>\n          {selected}\n        </div>\n        <div>\n          <HtmlIcon\n            className={`caretIcon ${toggle ? \"down\" : \"up\"}`}\n            entity={\"&#9662;\"}\n          />\n        </div>\n      </div>\n      {toggle && (\n        <div className=\"wrapper\">\n          {searchable && (\n            <div className=\"searchContent\">\n              <input\n                className=\"inputText\"\n                onChange={e => onSearch(e.target.value)}\n                placeholder=\"Search\"\n                type=\"text\"\n                value={searchValue}\n              />\n              {searchValue && (\n                <HtmlIcon\n                  onClick={onDismiss}\n                  className={`icon`}\n                  entity={\"&#10006;\"}\n                />\n              )}\n            </div>\n          )}\n          <div className=\"listWrapper\">\n            <ul>\n              {dropDownList.length > 0 ? dropDownList.map((d, i) => (\n                <li className={(d.id && (d.id === defaultValueOrArray || checkedItems.includes(d.id))) ? \"selectedSingle\" : \"\"} key={i}>\n                  {type === \"multiple\" ? (\n                    <Checkbox\n                      key={i}\n                      onChange={e => onCheckBoxChange(e, d)}\n                      checked={d.checked}\n                      info={d}\n                    />\n                  ) : (\n                    <div onClick={() => onSetSelected(d)}>{d.value}</div>\n                  )}\n                </li>\n              )) : (<li className=\"textCenter\">No results</li>)}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nFilterSelect.propTypes = {\n  type: PropTypes.string,\n  searchable: PropTypes.bool,\n  index: PropTypes.object,\n  primaryKey: PropTypes.string,\n  element: PropTypes.object,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onChange: PropTypes.func\n};\nFilterSelect.defaultProps = {\n  type: \"single\", // single or multiple\n  searchable: true\n};\n\nexport default FilterSelect;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst DateTimeDropDown = props => {\n  const { defaultValue, array, onSelectClick, onItemClick } = props;\n  const [focus, setFocus] = useState(false);\n  const listRef = useRef(null);\n  const ref = useRef(null);\n\n  const onSetFocus = bool => {\n    setFocus(bool);\n    if (bool) {\n      setTimeout(() => {\n        const targetElm = document.querySelector(\".options\");\n        const checkedPos =\n          document.querySelector(\".checked\") !== null\n              ? document.querySelector(\".checked\").offsetTop\n            : 0;\n        if(targetElm && checkedPos) {\n          targetElm.scrollTo({ top: checkedPos, behavior: \"smooth\" });\n        }\n      }, 100);\n    }\n  };\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      onSetFocus(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  return (\n    <div ref={ref}>\n      {!focus && (\n        <div\n          className=\"selected\"\n          onClick={() => {\n            onSetFocus(!focus);\n            onSelectClick(defaultValue);\n          }}\n        >\n          {defaultValue}\n        </div>\n      )}\n      {focus && (\n        <div className=\"dateTimeDropDown\">\n          <div className=\"placeHolder\">{defaultValue}</div>\n          {focus && (\n            <ul ref={listRef} id=\"container\" className=\"options\">\n              {array.map((a, i) => (\n                <li\n                  key={i}\n                  onClick={() => {\n                    onSetFocus(false);\n                    onItemClick(a.value);\n                  }}\n                  className={\n                    defaultValue.toString() === a.value.toString()\n                      ? \"checked\"\n                      : \"\"\n                  }\n                >\n                  <span className=\"labelValue\">{a.label}</span>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nDateTimeDropDown.propTypes = {\n  property: PropTypes.string\n};\nDateTimeDropDown.defaultProps = {\n  property: \"String name\"\n};\n\nexport default DateTimeDropDown;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport helpers from \"../../helpers\";\nimport DateTimeDropDown from \"./DateTimeDropDown\";\n\nconst DateTimeSelector = props => {\n  let { value, type, onChange } = props;\n  value = new Date(value).toString() === \"Invalid Date\" ? new Date() : value;\n  const [dbYear, setDbYear] = useState(value.getFullYear());\n  const [dbMonth, setDbMonth] = useState(\n    helpers.leadingZeros(value.getMonth() + 1)\n  );\n  const [dbDate, setDbDate] = useState(helpers.leadingZeros(value.getDate()));\n  const [dbHours, setDbHours] = useState(\n    helpers.leadingZeros(value.getHours())\n  );\n  const [dbMinutes, setDbMinutes] = useState(\n    helpers.leadingZeros(value.getMinutes())\n  );\n  const [dbSeconds, setDbSeconds] = useState(\n    helpers.leadingZeros(value.getSeconds())\n  );\n\n  const dateCount = new Date(dbYear, dbMonth, 0).getDate();\n\n  const addLeadingZerosAsObject = (count, inc = 0, start = false) => {\n    const init = !isNaN(start) ? start : inc;\n    return Array(count)\n      .fill()\n      .map((_, i) => {\n        return {\n          value: helpers.leadingZeros(init + i).toString(),\n          label: helpers.leadingZeros(init + i).toString()\n        };\n      });\n  };\n\n  const startYear = new Date(1900, 0, 1).getFullYear();\n  const endYear = new Date().getFullYear();\n  const years = addLeadingZerosAsObject(endYear - startYear + 1, 1, startYear);\n  const months = addLeadingZerosAsObject(12, 1, 1);\n  const dateArray = addLeadingZerosAsObject(dateCount, 1, 1);\n  const [dates, setDates] = useState(dateArray);\n\n  const hours = addLeadingZerosAsObject(24, 1, 0);\n  const minutes = addLeadingZerosAsObject(60, 1, 0);\n  const seconds = addLeadingZerosAsObject(60, 1, 0);\n\n  useEffect(() => {\n    const date = new Date(\n      dbYear,\n      Number(dbMonth) - 1,\n      dbDate,\n      dbHours,\n      dbMinutes,\n      dbSeconds,\n      0\n    );\n    onChange(date);\n  }, [dbYear, dbMonth, dbDate,dbHours,dbMinutes,dbSeconds]);\n  return (\n    <div\n      className={`dateTimeSelector ${type === \"date\" ? \"date\" : \"dateTime\"}`}\n    >\n      <DateTimeDropDown\n        defaultValue={dbYear}\n        array={years}\n        onSelectClick={value => setDbYear(value)}\n        onItemClick={value => {\n          setDbYear(value);\n          const callDays = new Date(value, 1, 0).getDate();\n          const dateArray = addLeadingZerosAsObject(callDays, 1, 1);\n          setDates(dateArray);\n          setDbMonth(\"01\");\n          setDbDate(\"01\");\n        }}\n      />\n      <div>/</div>\n      <DateTimeDropDown\n        defaultValue={dbMonth}\n        array={months}\n        onSelectClick={value => setDbMonth(value)}\n        onItemClick={value => {\n          setDbMonth(value);\n          const callDays = new Date(dbYear, value, 0).getDate();\n          const dateArray = addLeadingZerosAsObject(callDays, 1, 1);\n          setDates(dateArray);\n          setDbDate(\"01\");\n        }}\n      />\n      <div>/</div>\n      <DateTimeDropDown\n        defaultValue={dbDate}\n        array={dates}\n        onSelectClick={value => setDbDate(value)}\n        onItemClick={value => {\n          setDbDate(helpers.leadingZeros(value));\n        }}\n      />\n      {type === \"dateTime\" && (\n        <>\n          <div>&nbsp;</div>\n          <DateTimeDropDown\n            defaultValue={dbHours}\n            array={hours}\n            onSelectClick={value => setDbHours(value)}\n            onItemClick={value => {\n              setDbHours(helpers.leadingZeros(value));\n            }}\n          />\n          <div>:</div>\n          <DateTimeDropDown\n            defaultValue={dbMinutes}\n            array={minutes}\n            onSelectClick={value => setDbMinutes(value)}\n            onItemClick={value => {\n              setDbMinutes(helpers.leadingZeros(value));\n            }}\n          />\n          <div>:</div>\n          <DateTimeDropDown\n            defaultValue={dbSeconds}\n            array={seconds}\n            onSelectClick={value => setDbSeconds(value)}\n            onItemClick={value => {\n              setDbSeconds(helpers.leadingZeros(value));\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nDateTimeSelector.propTypes = {\n  value: PropTypes.object,\n  type: PropTypes.string,\n  onChange: PropTypes.func\n};\nDateTimeSelector.defaultProps = {\n  type: \"date\"\n};\n\nexport default DateTimeSelector;\n","import React, { useState } from \"react\";\nimport Radio from \"./FormElements/Radio\";\nimport HtmlIcon from \"./FormElements/HtmlIcon\";\nimport FilterSelect from \"./FormElements/FilterSelect\";\nimport DateTimeSelector from \"./FormElements/DateTimeSelector\";\n\nfunction FormElement(props) {\n  const {\n    isPostable,\n    index,\n    value,\n    element,\n    primaryKey,\n    onChange,\n    placeholder,\n    showDecrement,\n    showIncrement,\n    onDelete,\n    onAddRow,\n    ...rest\n  } = props;\n  const [date, setDate] = useState(new Date(value));\n\n  const objectToDate = date => {\n    const [YYYY, MM, DD] = [\n      date.getFullYear(),\n      date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`,\n      date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`\n    ];\n    const dateString = `${YYYY}-${MM}-${DD}`;\n    return dateString;\n  };\n\n  const objectToDateTime = dt => {\n    let [YYYY, MM, DD, hh, mm, ss] = [\n      dt.getFullYear(),\n      dt.getMonth() + 1 > 9 ? dt.getMonth() + 1 : `0${dt.getMonth() + 1}`,\n      dt.getDate() > 9 ? dt.getDate() : `0${dt.getDate()}`,\n      dt.getHours(),\n      dt.getMinutes(),\n      dt.getSeconds()\n    ];\n    hh = hh < 10 ? \"0\" + hh : hh;\n    mm = mm < 10 ? \"0\" + mm : mm;\n    ss = ss < 10 ? \"0\" + ss : ss;\n    const dateString = `${YYYY}-${MM}-${DD} ${hh}:${mm}:${ss}`;\n    return dateString;\n  };\n\n  let [dateTime, setDatetime] = useState(new Date(value));\n\n  if (element === \"date\") {\n    if (isNaN(Date.parse(date))) {\n      let today = new Date();\n      today = objectToDate(today);\n      const date = new Date(today);\n      setDate(date);\n      setTimeout(() => {\n        onChange(index, today);\n      }, 100);\n    }\n  }\n\n  if (element === \"dateTime\") {\n    if (isNaN(Date.parse(dateTime))) {\n      let today = new Date();\n      today = objectToDateTime(today);\n      dateTime = new Date(today);\n      setDatetime(dateTime);\n      setTimeout(() => {\n        onChange(index, today);\n      }, 100);\n    }\n  }\n\n  const renderElement = (index, element, value, primaryKey) => {\n    if (typeof element === \"string\") {\n      switch (element) {\n        case \"textbox\":\n          return (\n            <input\n              type=\"text\"\n              placeholder={placeholder}\n              onBlur={e => onChange(index, e.target.value, primaryKey)}\n              className=\"inputText\"\n              defaultValue={value}\n              {...rest}\n            />\n          );\n        case \"number\":\n          return (\n            <input\n              type=\"number\"\n              placeholder={placeholder}\n              onBlur={e => onChange(index, e.target.value, primaryKey)}\n              className=\"inputText\"\n              defaultValue={value}\n              {...rest}\n            />\n          );\n        case \"textarea\":\n          return (\n            <textarea\n              placeholder={placeholder}\n              onBlur={e => onChange(index, e.target.value, primaryKey)}\n              rows=\"3\"\n              className=\"inputText\"\n              defaultValue={value}\n              {...rest}\n            />\n          );\n        case \"label\":\n          return <div className=\"defaultLabel\" {...rest}>{value}</div>;\n        case \"checkbox\":\n          return isPostable ? (\n            <>\n              {showDecrement && (\n                <HtmlIcon\n                  onClick={() => onDelete(index)}\n                  className=\"error\"\n                  entity={\"&#215;\"}\n                />\n              )}\n              {showIncrement && (\n                <div\n                  className={\n                    showDecrement === false ? \"floatLeft\" : \"floatRight\"\n                  }\n                >\n                  <HtmlIcon\n                    onClick={() => onAddRow(true)}\n                    className=\"success tilt-45\"\n                    entity={\"&#215;\"}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"defaultLabel\" {...rest}>{value}</div>\n          );\n        case \"date\":\n          return (\n            <DateTimeSelector\n              value={date}\n              onChange={value => {\n                setDate(value);\n                onChange(index, objectToDate(value), primaryKey);\n              }}\n            />\n          );\n        case \"dateTime\":\n          return (\n            <DateTimeSelector\n              value={date}\n              type={\"dateTime\"}\n              onChange={value => {\n                setDate(value);\n                onChange(index, objectToDate(value), primaryKey);\n              }}\n            />\n\n          );\n        default:\n          return <div className=\"defaultLabel\" {...rest}>{value}</div>;\n      }\n    } else if (typeof element === \"object\") {\n      const firstKey = Object.keys(element)[0];\n      switch (firstKey) {\n        case \"multiChoice\":\n          return (\n            <FilterSelect\n              index={index}\n              primaryKey={primaryKey}\n              onChange={(ind, val, pKey) => onChange(ind, val, pKey)}\n              element={element}\n              value={value}\n              type={Array.isArray(value) ? \"multiple\" : \"single\"}\n              searchable={element.searchable}\n            />\n          );\n        case \"radio\":\n          return (\n            <Radio\n              key={`${index.i}-${index.j}`}\n              index={index}\n              primaryKey={primaryKey}\n              onChange={(ind, val, pKey) => onChange(ind, val, pKey)}\n              element={element}\n              value={value}\n            />\n          );\n        default:\n          return <div className=\"defaultLabel\" {...rest}>{value}</div>;\n      }\n    }\n  };\n\n  return <>{renderElement(index, element, value, primaryKey)}</>;\n}\n\nexport default FormElement;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = props => {\n  const { totalPages, maxPagesToShow, selectedPageString, onSetPage } = props;\n  const [currentPage, setCurrentPage] = useState(props.currentPage);\n  const makePageArray = totalPages => Array.from({ length: totalPages }, (_, idx) => ++idx);\n  const [pages, setPages] = useState(makePageArray(totalPages));\n  const pageIdGen = i => `page-${i}`;\n\n  useEffect(() => {\n    setPages(makePageArray(totalPages));\n    const totPages = selectedPageString === \"first\" ? 1 : totalPages;\n    setCurrentPage(totPages);\n    onSetPage(totPages);\n  }, [totalPages]);\n\n  useEffect(() => {\n    let newPages = [];\n    if (maxPagesToShow < totalPages && currentPage > 0) {\n      if (currentPage < totalPages - maxPagesToShow) {\n        newPages = [\n          ...createfromToArray(maxPagesToShow, currentPage),\n          \"...\",\n          totalPages\n        ];\n        setPages(newPages);\n      } else {\n        newPages = [\n          ...createfromToArray(maxPagesToShow + 1, totalPages - maxPagesToShow)\n        ];\n        setPages(newPages);\n      }\n    }\n  }, [currentPage]);\n\n  const onSetCurrentPage = page => {\n    setCurrentPage(page);\n    onSetPage(page);\n  };\n\n  const createfromToArray = (a, b) =>\n    Array(a)\n      .fill()\n      .map((_, idx) => b + idx);\n  return (\n    pages.length > 0 && (\n      <ul className=\"page\">\n        <li\n          onClick={() => (currentPage > 1 ? onSetCurrentPage(1) : null)}\n          className={`lt ${currentPage > 1 ? \"\" : \"disabled\"}`}\n        >\n          &lt;&lt;\n        </li>\n        <li\n          onClick={() =>\n            currentPage > 1 ? onSetCurrentPage(currentPage - 1) : null\n          }\n          className={`lt ${currentPage > 1 ? \"\" : \"disabled\"}`}\n        >\n          &lt;\n        </li>\n        {pages.map((page, i) => (\n          <li\n            key={pageIdGen(i)}\n            onClick={() =>\n              !isNaN(page) && page <= totalPages ? onSetCurrentPage(page) : null\n            }\n            {...(page === currentPage && { className: \"active\" })}\n          >\n            {page}\n          </li>\n        ))}\n        <li\n          onClick={() =>\n            currentPage < totalPages ? onSetCurrentPage(currentPage + 1) : null\n          }\n          className={`gt ${currentPage === totalPages ? \"disabled\" : \"\"}`}\n        >\n          &gt;\n        </li>\n        <li\n          onClick={() =>\n            currentPage < totalPages ? onSetCurrentPage(totalPages) : null\n          }\n          className={`gt ${currentPage === totalPages ? \"disabled\" : \"\"}`}\n        >\n          &gt;&gt;\n        </li>\n      </ul>\n    )\n  );\n};\n\nPagination.propTypes = {\n  currentPage: PropTypes.number,\n  totalPages: PropTypes.number,\n  maxPagesToShow: PropTypes.number,\n  onSetCurrentPage: PropTypes.func\n};\nPagination.defaultProps = {};\n\nexport default Pagination;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HtmlIcon from \"./HtmlIcon\";\n\nconst GroupElemet = props => {\n  const { defaultRecordsPerPage, onSearchChange, onDropDownChange, onDismissSearch } = props;\n  const [toggle, setToggle] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selected, setSelected] = useState(defaultRecordsPerPage);\n  const ref = useRef(null);\n  const array = Array.from({ length: 10 }, (_, idx) => ++idx).map((v, i) => {\n    if (i >= 0 && i <= 2) {\n      return v * defaultRecordsPerPage;\n    }\n    if (i >= 3 && i <= 5) {\n      return v * defaultRecordsPerPage * 5;\n    }\n    if (i >= 6 && i <= 9) {\n      return v * defaultRecordsPerPage * 10;\n    }\n    return null;\n  });\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setToggle(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  const onSearch = e => {\n    const newVal = e.target.value;\n    onSearchChange(newVal);\n    setSearchValue(newVal);\n  };\n\n  const dismiss = () => {\n    onDismissSearch();\n    setSearchValue(\"\");\n  };\n\n  const onDropDownSelect = (count) => {\n    setSelected(count);\n    onDropDownChange(count);\n  }\n  return (\n    <div className=\"group-input\">\n      <div className=\"inputWrapper\">\n        <input\n          onChange={e => onSearch(e)}\n          placeholder=\"Search\"\n          type=\"text\"\n          value={searchValue}\n          className=\"join-input\"\n        />\n        {searchValue && (\n          <HtmlIcon onClick={dismiss} className=\"dismiss\" entity={\"&#215;\"} />\n        )}\n      </div>\n      <div\n        ref={ref}\n        onClick={() => setToggle(!toggle)}\n        title={`show ${selected} records per page`}\n        className=\"join-select\"\n      >\n        <div\n          style={\n            toggle\n              ? { borderBottomRightRadius: 0 }\n              : { borderBottomRightRadius: \"5px\" }\n          }\n          className=\"selected\"\n        >\n          <div>\n            <span>{selected}</span>\n            <HtmlIcon className={`icon up`} entity={\"&#9662;\"} />\n          </div>\n        </div>\n        {toggle && (\n          <ul>\n            {array.map(v => (\n              <li onClick={() => onDropDownSelect(v)}>{v}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nGroupElemet.propTypes = {\n  property: PropTypes.string\n};\nGroupElemet.defaultProps = {\n  property: \"String name\"\n};\n\nexport default GroupElemet;\n","const helpers = {\n  self: this,\n  fluorescentColor: \"#c2d82e\",\n  sageHeaderAndList: (response, sortKey) => {\n    const list = response.filter(e => Number(e[sortKey]) > 1);\n    const heading = response.filter(e => Number(e[sortKey]) === 1)[0];\n    return [heading, list];\n  },\n  LoadRandomSpinnerIcon: () => {\n    const icons = [\n      \"Audio\",\n      \"BallTriangle\",\n      \"Bars\",\n      \"Circles\",\n      \"Grid\",\n      \"Hearts\",\n      \"Oval\",\n      \"Puff\",\n      \"Rings\",\n      \"TailSpin\",\n      \"ThreeDots\"\n    ];\n    // const rIndex = Math.floor(Math.random() * icons.length) + 1;\n    const icon = icons[6];\n    return icon;\n  },\n  stringToCapitalize: string => {\n    return string\n      .split(\"_\")\n      .map(s => s.substring(0, 1).toUpperCase() + s.substring(1, s.length))\n      .join(\" \");\n  },\n  donutChartColors: [\n    \"#e91e63\",\n    \"#9c27b0\",\n    \"#673ab7\",\n    \"#3f51b5\",\n    \"#2196f3\",\n    \"#03a9f4\",\n    \"#00bcd4\",\n    \"#009688\",\n    \"#4caf50\",\n    \"#8bc34a\",\n    \"#cddc39\",\n    \"#ffeb3b\",\n    \"#ffc107\",\n    \"#ff9800\",\n    \"#ff5722\",\n    \"#795548\",\n    \"#607d8b\",\n    \"#f44336\"\n  ],\n  indianLacSeperator: value => {\n    return value.toLocaleString(\"en-IN\", {\n      maximumFractionDigits: 2,\n      style: \"currency\",\n      currency: \"INR\"\n    });\n  },\n  countryCurrencyLacSeperator: (locale, currency, value, maximumFractionDigits) => {\n    return Number(value).toLocaleString(locale, {\n      maximumFractionDigits,\n      minimumFractionDigits: maximumFractionDigits,\n      style: currency ? \"currency\" : \"decimal\",\n      ...currency && {currency}\n    });\n  },\n  lacSeperator: number => {\n    return number.toLocaleString('en-IN');\n  },\n  strToNumMonth: {\n    // usage: strToNumMonth[\"Mar\"] | output: \"03\"\n    Jan: \"01\",\n    Feb: \"02\",\n    Mar: \"03\",\n    Apr: \"04\",\n    May: \"05\",\n    Jun: \"06\",\n    Jul: \"07\",\n    Aug: \"08\",\n    Sep: \"09\",\n    Oct: \"10\",\n    Nov: \"11\",\n    Dec: \"12\"\n  },\n  monthToStr: {\n    // usage: monthToStr[\"03\"] | output: Mar\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\",\n    \"04\": \"Apr\",\n    \"05\": \"May\",\n    \"06\": \"Jun\",\n    \"07\": \"Jul\",\n    \"08\": \"Aug\",\n    \"09\": \"Sep\",\n    \"10\": \"Oct\",\n    \"11\": \"Nov\",\n    \"12\": \"Dec\"\n  },\n  fullmonthNames: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  threeDigitMonthNames: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  leadingZeros: number => {\n    let num = Number(number);\n    return num < 10 ? `0${num}` : num;\n  },\n  dateToMonthYear: date => {\n    // usage: 2020-03-18 | Output: Mar-2020\n    const myDate = new Date(date);\n    return `${\n      helpers.threeDigitMonthNames[myDate.getMonth()]\n    }-${myDate.getFullYear()}`;\n  },\n  addMonths: (date, count) => {\n    if (date && count) {\n      let [m, d] = [\"\", (date = new Date(+date)).getDate()];\n      date.setMonth(date.getMonth() + count, 1);\n      m = date.getMonth();\n      date.setDate(d);\n      if (date.getMonth() !== m) date.setDate(0);\n    }\n    return date;\n  },\n  getNextMonthFirst: () => {\n    // get\n    const now = new Date();\n    let year = now.getFullYear();\n    let month = now.getMonth() + 2;\n    if (month > 12) {\n      year += 1;\n      month = 1;\n    }\n    // set\n    const date = new Date(`${year}-${month}-01`);\n    let mm = date.getMonth() + 1;\n    mm = mm < 10 ? `0${mm}` : mm;\n    const yyyy = date.getFullYear();\n    return `${yyyy}-${mm}-01`;\n  },\n  getNow: () => {\n    const leadingZeros = number => {\n      let num = Number(number);\n      return num < 10 ? `0${num}` : num;\n    };\n    const now = new Date();\n    const yyyy = now.getFullYear();\n    const mmm = leadingZeros(now.getMonth() + 1);\n    const dd = leadingZeros(now.getDate());\n    const hh = leadingZeros(now.getHours());\n    const mm = leadingZeros(now.getMinutes());\n    const ss = leadingZeros(now.getSeconds());\n    return `${yyyy}-${mmm}-${dd} ${hh}:${mm}:${ss}`;\n  }\n};\n\nexport default helpers;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","const simpleTable = {\n  dbData: new Array(100).fill().map((_, i) => ({\n    name: `John-${i + 1}`,\n    dob: \"1990-05-01\",\n    gender: \"Male\",\n    salary: 100000\n  }))\n};\n\nconst longTable = {\n  data: new Array(100).fill().map((_, i) => ({\n    name: `John-${i + 1}`,\n    dob: \"1990-05-01\",\n    gender: \"Male\",\n    salary: 100000,\n    phone: \"+91 44 12345678\",\n    city: \"CHN\",\n    pinCode: \"600001\",\n    state: \"TN\",\n    country: \"IN\"\n  }))\n};\nconst aliasHeaders = {\n  data: new Array(100).fill().map((_, i) => ({\n    name: `John-${i + 1}`,\n    dob: \"1990-05-01\",\n    gender: \"Male\",\n    salary: 100000\n  }))\n};\nconst noPagination = {\n  data: new Array(10).fill().map((_, i) => ({\n    name: `John-${i + 1}`,\n    dob: \"1990-05-01\",\n    gender: \"Male\",\n    salary: 100000 + i\n  }))\n};\nexport { simpleTable, longTable, aliasHeaders, noPagination };\n","import React, { useState } from \"react\";\nimport { simpleTable } from \"../../mockData\";\nimport ReactFormDataTable from \"../../root/ReactFormDataTable\";\n\nconst SimpleDataTable = props => {\n  const [toggle, setToggle] = useState(false);\n  const {\n    config,\n    Table,\n    TableRows,\n    TableAliasRows,\n    rowElements,\n    dbData,\n    showTooltipFor,\n    apiInstance\n  } = simpleTable;\n\n  return (\n    <>\n      <div className=\"overflowHidden\">\n        <h3 className=\"heading\">Simple Data Table</h3>\n        <pre className=\"code\">\n          {`\n        <ReactFormDataTable\n          data={data}\n          theme={${!toggle ? \"dark\" : \"light\"}}\n          cellWidth=\"18rem\"\n        />\n        `}\n        </pre>\n        <div className=\"infoDiv\">\n            <div />\n            <button className=\"btn\" onClick={() => setToggle(!toggle)}>Toggle Theme</button>\n        </div>\n        <ReactFormDataTable\n          data={dbData}\n          theme={!toggle ? \"dark\" : \"light\"}\n          cellWidth=\"18rem\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SimpleDataTable;\n","import SimpleDataTable from \"./tables/SimpleDataTable\";\nimport LongTable from \"./tables/LongTable\";\nimport AliasHeaders from \"./tables/AliasHeaders\";\nimport NoPagination from \"./tables/NoPagination\";\nconst menus = [\n  {\n    href: \"/simpleDataTable\",\n    label: \"Simple Data Table\",\n    component: SimpleDataTable\n  },\n  {\n    href: \"/longTable\",\n    label: \"Long Table\",\n    component: LongTable\n  },\n  {\n    href: \"/aliasHeaders\",\n    label: \"Alias Headers\",\n    component: AliasHeaders\n  },\n  {\n    href: \"/noPagination\",\n    label: \"No Pagination\",\n    component: NoPagination\n  },\n\n];\n\nexport { menus };\n","import React, { useState } from \"react\";\nimport { aliasHeaders } from \"../../mockData\";\nimport ReactFormDataTable from \"../../root/ReactFormDataTable\";\n// import \"code-prettify/styles/desert.css\";\n\nconst LongTable = props => {\n  const {\n    config,\n    Table,\n    TableRows,\n    TableAliasRows,\n    rowElements,\n    data,\n    showTooltipFor,\n    apiInstance\n  } = aliasHeaders;\n\n  return (\n    <>\n      <div className=\"overflowHidden\">\n        <h3 className=\"heading\">Long Table</h3>\n        <pre className=\"code\">\n          {`\n        <ReactFormDataTable\n          data={data}\n          theme=\"dark\"\n        />\n        `}\n        </pre>\n        <ReactFormDataTable\n          TableAliasRows={TableAliasRows}\n          data={data}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LongTable;\n","import React, { useState } from \"react\";\nimport { aliasHeaders } from \"../../mockData\";\nimport ReactFormDataTable from \"../../root/ReactFormDataTable\";\n// import \"code-prettify/styles/desert.css\";\n\nconst AliasHeaders = props => {\n  const {\n    config,\n    Table,\n    TableRows,\n    TableAliasRows,\n    rowElements,\n    data,\n    showTooltipFor,\n    apiInstance\n  } = aliasHeaders;\n\n  return (\n    <>\n      <div className=\"overflowHidden\">\n        <h3 className=\"heading\">Long Table</h3>\n        <pre className=\"code\">\n          {`\n        <ReactFormDataTable\n          TableAliasRows={[ \"Name\", \"DOB\", \"Gender\", \"Salary\" ]}\n          data={data}\n          theme=\"dark\"\n        />\n        `}\n        </pre>\n        <ReactFormDataTable\n          TableAliasRows={[\"Name\", \"DOB\", \"Gender\", \"Salary\"]}\n          data={data}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AliasHeaders;\n","import React, { useState } from \"react\";\nimport { noPagination } from \"../../mockData\";\nimport ReactFormDataTable from \"../../root/ReactFormDataTable\";\n// import \"code-prettify/styles/desert.css\";\n\nconst NoPagination = props => {\n  const {\n    config,\n    Table,\n    TableRows,\n    TableAliasRows,\n    rowElements,\n    data,\n    showTooltipFor,\n    apiInstance\n  } = noPagination;\n\n  return (\n    <>\n      <div className=\"overflowHidden\">\n        <h3 className=\"heading\">Long Table</h3>\n        <pre className=\"code\">\n        {`\n        <ReactFormDataTable\n          config={{ footer: { pagination: {} } }}\n          data={data}\n          theme=\"dark\"\n        />\n      `}\n        </pre>\n        <ReactFormDataTable\n          config={{ footer: { pagination: {} } }}\n          data={data}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default NoPagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { menus } from \"./menuComponent\";\nimport { useLocation } from \"react-router-dom\";\n\nconst SideBar = props => {\n  const location = useLocation();\n  const { pathname } = location;\n  const splitLocation = pathname.split(\"/\");\n\n  return (\n    <div className=\"sideBar\">\n      <h3 align=\"center\" className=\"brand\">\n        react-form-data-table\n      </h3>\n      <h4 align=\"center\" className=\"doc\">\n        Documentation\n      </h4>\n      <ul>\n        {menus.map((menu, i) => (\n          <li key={i} className={splitLocation[1] === menu.href.replace(\"/\",\"\") ? \"active\" : \"\"}>\n            <Link to={`${menu.href}`}>{menu.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nSideBar.propTypes = {\n  property: PropTypes.string\n};\nSideBar.defaultProps = {\n  property: \"String name\"\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { menus } from \"./menuComponent\";\nimport SimpleDataTable from \"./tables/SimpleDataTable\";\n\nclass Wrapper extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={SimpleDataTable} />\n        {menus.map((menu, i) => {\n          return (\n            <Route key={i} exact path={menu.href} component={menu.component} />\n          );\n        })}\n        <Route path=\"*\" component={SimpleDataTable} />\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(Wrapper);\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport history from \"../history\";\nimport SideBar from \"./SideBar\";\nimport Wrapper from \"./Wrapper\";\nimport \"./Documentation.scss\";\n\nconst Documentation = props => {\n  return (\n    <div className=\"documentation\">\n      <Router history={history}>\n        <SideBar />\n        <Wrapper />\n      </Router>\n    </div>\n  );\n};\n\nexport default Documentation;\n","import React from 'react';\nimport Documentation from \"./documentation/\";\n\nfunction App() {\n  return (\n      <Documentation />\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.scss\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}